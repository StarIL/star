<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
	<!-- mvn mybatis-generator:generate -->
	<classPathEntry location="C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.31\mysql-connector-java-5.1.31.jar" />
	<!-- 
	    context:生成一组对象的环境 
	    id:必选，上下文id，用于在生成错误时提示
	    defaultModelType:指定生成对象的样式
	        1，conditional：类似hierarchical；
	        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
	        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
	    targetRuntime:
	        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
	        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
	    introspectedColumnImpl：类全限定名，用于扩展MBG
	-->
	<context id="mySql">
	    <!-- 格式化java代码
    	<property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
	     -->
	    <!-- 格式化XML代码 
	    <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
	    -->
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="false" />
		</commentGenerator>

		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://sh-cdb-p41j1s69.sql.tencentcdb.com:63129/retail_solutions" userId="root"
			password="shop_2018" />
		<!-- java类型处理器 
		        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
		        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型； 
   		 -->
		<javaTypeResolver>
			<!-- 
	            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
	            false：默认,
	                scale>0;length>18：使用BigDecimal;
	                scale=0;length[10,18]：使用Long；
	                scale=0;length[5,9]：使用Integer；
	                scale=0;length<5：使用Short；
         	-->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- java模型创建器，是必须要的元素
        	targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
        	targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
     	-->
		<javaModelGenerator targetPackage="com.xhhxd.retail.bean.tm"
			targetProject="retail-solutions/src/main/java">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 生成映射文件的包名和位置 -->
		<sqlMapGenerator targetPackage="mapper.tm" targetProject="retail-solutions/src/main/resources">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!-- 生成DAO的包名和位置 -->
		<javaClientGenerator type="XMLMAPPER" 
			targetPackage="com.xhhxd.retail.mapper.tm" targetProject="retail-solutions/src/main/java">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

  <table tableName="tm_team_member" domainObjectName="TmTeamMember" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false" /> 
  <!-- <table tableName="od_order_delivery" domainObjectName="OrderDelivery" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false" /> -->
		
	</context>
</generatorConfiguration>