<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.xhhxd.retail.shiro" />
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="utk_s_id" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	
	<!-- 用户 session listener -->
	<bean id="customSessionListener" class="com.xhhxd.retail.shiro.listener.CustomSessionListener">
		<constructor-arg ref="redisShiroSessionRepository" />
	</bean>

	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="utk_r_id" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!--30天 -->
	</bean>

	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('6ZmI6I2j5Y+R5aSn5ZOlAA==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- Session操作/管理 -->
	<bean id="customShiroSessionDAO" class="com.xhhxd.retail.shiro.session.CustomShiroSessionDAO">
		<constructor-arg ref="redisShiroSessionRepository" />
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	
	<!-- session validation scheduler -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		 <property name="interval" value="3600000"/>
	     <property name="sessionManager" ref="sessionManager"/>
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
		<property name="cacheManager" ref="customShiroCacheManager" />		
	</bean>
	
	<!-- 用户 cache-->
	<bean id="customShiroCacheManager" class="com.xhhxd.retail.shiro.CustomShiroCacheManager">
	    <constructor-arg ref="redisShiroCacheManager" />
	</bean>
	<!-- redis cache -->
	<bean id="redisShiroCacheManager" class="com.xhhxd.retail.shiro.ShiroRedisCacheManager">
	    <constructor-arg ref="redisManager" />
	</bean>
	<!-- 静态注入 -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	    <property name="arguments" ref="securityManager"/>
	</bean>
	
	<bean id="shiroDbRealm" class="com.xhhxd.retail.shiro.ShiroDbRealm">
		<property name="cachingEnabled" value="true"/>
		<property name="authenticationCachingEnabled" value="true"/>
		<property name="authenticationCacheName" value="auth_"/>
		<property name="authorizationCachingEnabled" value="true"/>
		<property name="authorizationCacheName" value="authc_"/>
	</bean>

	<bean id="sessionManager" class="com.xhhxd.retail.shiro.ShiroWebSessionManager">
		<property name="sessionValidationInterval" value="3600000"/>
		<property name="globalSessionTimeout" value="3600000"/>
		<property name="sessionDAO" ref="customShiroSessionDAO"/>
		 <property name="sessionListeners">
	       <list>
	           <ref bean="customSessionListener"/>
	       </list>
	   </property>
	   <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
	   <property name="sessionValidationSchedulerEnabled" value="true"/>
	   <property name="deleteInvalidSessions" value="true"/>
	   <property name="sessionIdCookie" ref="sessionIdCookie"/>
	   <property name="redisManager" ref="redisManager"/>
	</bean>
	<bean id="redisShiroSessionRepository" class="com.xhhxd.retail.shiro.session.RedisShiroSessionRepository">
		 <constructor-arg ref="redisManager" />
	</bean>
	
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<!-- <property name="successUrl" value="/order/center" /> -->
		<property name="unauthorizedUrl" value="/unauthorized" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="userAuthFilter" />
				<entry key="logout" value-ref="logoutFilter" />
				<entry key="perms" value-ref="permission"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/board/** = anon
				
				/attachmens-file/** = authc
				/customer-bill/** = authc
				/customer/** = authc
				/customer/product/** = authc
				/agreement/** = authc
				/enquiry/** = authc
				/expense-type/** = authc
				/finance/** = authc
				/invoic/** = authc
				/order/** = authc,perms[order:index,order:center,order:create,order:saveBasic,order:saveTrade,order:saveWarehouse,order:saveFinance,order:upPartner,order:upAgreement,order:upOperator,order:upDocument,order:uploadAttachment,document:clearUpLoad,document:newBillType,document:updateById,document:get,order:complete-settle,order:cancel-settle,settlement:receivableExpense,settlement:paymentExpense,settlement:modifySettlement,settlement:deleteSettlement,settlement:proxy-receivable,settlement:modifyExpense,order:submit,order:success,order:close,order:account,order:reSetOrder,todo:add,todo:upComplate,order:resetPlan]
				/settlement/** = authc
				/partner/** = authc
				/payment/** = authc
				/protocol/** =authc
				/receipt/** =authc
				/receivable/cost = authc
				/user/** = authc
				/systemManage/** = authc
				/module/** = authc
				/agent/** = authc
				<!-- /supplier/** = authc -->
				/exchangeRate/** = authc
				/index/** = authc
				/purchaseOrder/** = authc,perms
				
				/logout = logout
				/js/** = anon
				/css/** = anon
				/fonts/** = anon
				/images/** = anon
				/plugins/** = anon
			</value>
		</property>
	</bean>
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login" />
	</bean>
	<bean id="permission" class="com.xhhxd.retail.filter.PermissionFilter"/>
	<bean id="userAuthFilter" class="com.xhhxd.retail.filter.UserAuthenticationFilter" />
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>